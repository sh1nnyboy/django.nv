name: Vulnerability Scanning
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan

jobs:
  pipeline-scan:
    name: Scan Pipeline for Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      
      # Scan GitHub Actions workflows for vulnerabilities
      - name: Scan GitHub Actions workflows
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const workflowsDir = '.github/workflows';
            
            if (!fs.existsSync(workflowsDir)) {
              console.log('No workflows directory found');
              return;
            }
            
            const files = fs.readdirSync(workflowsDir);
            console.log(`Scanning ${files.length} workflow files for vulnerabilities...`);
            
            // Check for common vulnerabilities in GitHub Actions
            const vulnerabilities = [];
            
            for (const file of files) {
              const filePath = path.join(workflowsDir, file);
              const content = fs.readFileSync(filePath, 'utf8');
              
              // Check for script injection vulnerabilities
              if (content.includes('${{github.event.') && content.includes('run:')) {
                vulnerabilities.push(`Potential script injection in ${file}`);
              }
              
              // Check for unpinned actions
              const actionRegex = /uses:\s+([^@]+)@([^#\s]+)/g;
              let match;
              while ((match = actionRegex.exec(content)) !== null) {
                const [, action, version] = match;
                if (version.startsWith('v') || version === 'master' || version === 'main') {
                  vulnerabilities.push(`Unpinned action in ${file}: ${action}@${version}`);
                }
              }
            }
            
            if (vulnerabilities.length > 0) {
              console.log('Vulnerabilities found:');
              vulnerabilities.forEach(v => console.log(`- ${v}`));
              core.setFailed('Workflow vulnerabilities detected');
            } else {
              console.log('No vulnerabilities found in workflows');
            }
  
  dependency-check:
    name: Scan Dependencies for Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      
      - name: Set up Node.js
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            if [ -f "package-lock.json" ]; then
              npm ci
            else
              npm install
            fi
          else
            echo "No package.json found, skipping npm install"
          fi
      
      - name: Run npm audit
        if: hashFiles('package.json') != ''
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Create empty suppression file
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?><suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd"></suppressions>' > suppression.xml
      
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'My Project'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --enableExperimental
            --scan node_modules
            --suppression suppression.xml
      
      - name: Upload dependency check report
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: dependency-check-report
          path: reports
